<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>4Share-rsses on Isulew&#39;s Blog</title>
    <link>https://netcookies.github.io/b/4share/index.xml</link>
    <description>Recent content in 4Share-rsses on Isulew&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Sep 2016 18:00:00 +0800</lastBuildDate>
    <atom:link href="https://netcookies.github.io/b/4share/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>当梯子不可用时可以自动重启梯子的脚本</title>
      <link>https://netcookies.github.io/b/4share/2016-09-15/</link>
      <pubDate>Thu, 15 Sep 2016 18:00:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2016-09-15/</guid>
      <description>

&lt;h3 id=&#34;序&#34;&gt;序&lt;/h3&gt;

&lt;p&gt;总有各种各样的原因会使梯子无法使用，此时往往重启服务是最快的选择。
然而并不是时刻你都有电脑在边上，手机打开 ssh,telnet 也并不方便。
“这就尴尬了。”
于是我便写下了这个脚本。适用各种支持 socks5、http 梯子。
以下都以 debian 系的 linux 例，centos 系请自行更改包管理和 daemon 管理的命令。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;###服务端配置
* 安装必要组件&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get install -y lighttpd php5-cgi 
lighttpd-enable-mod auth
lighttpd-enable-mod fastcgi
lighttpd-enable-mod fastcgi-php
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;配置 lighttpd
1.配置 http basic 认证，用于保护 site，先保存下面的脚本为 &lt;code&gt;auth.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh
user=$1
realm=$2
pass=$3
hash=`echo -n &amp;quot;$user:$realm:$pass&amp;quot; | md5sum | cut -b -32`
echo &amp;quot;$user:$realm:$hash&amp;quot; &amp;gt; /etc/lighttpd/lighttpd.user
cat&amp;gt;/etc/lighttpd/conf-enabled/05-auth.conf&amp;lt;&amp;lt;EOF
server.modules                += ( &amp;quot;mod_auth&amp;quot; )

auth.backend                 = &amp;quot;htdigest&amp;quot;
auth.backend.htdigest.userfile = &amp;quot;/etc/lighttpd/lighttpd.user&amp;quot;
auth.require = ( &amp;quot;/proxy&amp;quot; =&amp;gt;
(
	&amp;quot;method&amp;quot; =&amp;gt; &amp;quot;basic&amp;quot;,
	&amp;quot;realm&amp;quot; =&amp;gt; &amp;quot;proxy&amp;quot;,
	&amp;quot;require&amp;quot; =&amp;gt; &amp;quot;user=$user&amp;quot;
)
)
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.运行 auth.sh，三个参数分别为用户名、域、密码&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh auth.sh &amp;lt;user&amp;gt; &amp;lt;realm&amp;gt; &amp;lt;password&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.实现简易的 web 接口用来接收 client 端的 POST 请求&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh
mkdir -p /var/www/proxy
cd /var/www/proxy
echo 0 &amp;gt; restart.status
cat&amp;gt;/var/www/ifproxyworking.php&amp;lt;&amp;lt;EOF
&amp;lt;?php
$restart = $_POST[&#39;restart&#39;];
$filename = &amp;quot;restart.status&amp;quot;;
if (isset($restart) &amp;amp;&amp;amp; is_numeric($restart) &amp;amp;&amp;amp; $restart &amp;gt;= 0) {
	if ($restart != 0 &amp;amp;&amp;amp; $restart != 1) {
		$restart = 0;
	}
	$fh = fopen($filename, &amp;quot;w&amp;quot;);
	fwrite($fh, $restart, 1);
	fclose($fh);
}
?&amp;gt;
EOF
chown -R www-data:www-data /var/www/proxy
/etc/init.d/lighttpd force-reload
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;配置 crontab 及监控 daemon 的脚本
1.保存以下脚本&lt;code&gt;monitor.sh&lt;/code&gt; proc_name 填你梯子 daemon 的名称，如 shadowsocks, v2ray etc
&lt;code&gt;bash
#!/bin/sh
proc_name=&amp;quot;YOUR PROXY NAME&amp;quot;
require_restart=`cat /var/www/proxy/restart.status`
if [ $require_restart -eq 1 ]; then
	/usr/sbin/service $proc_name restart
	echo 0 &amp;gt; /var/www/proxy/restart.status
	exit 0
fi
number=`ps -ef | grep $proc_name | grep -v grep | wc -l`
if [ $number -eq 2 ]; then
	/usr/sbin/service $proc_name stop
	ps -ef | grep $proc_name | grep -v grep | awk &#39;{print $2}&#39; | xargs kill -9
	sleep 1
	/usr/sbin/service $proc_name start
fi
if [ $number -eq 0 ]; then
	/usr/sbin/service $proc_name start
fi
&lt;/code&gt;
2.将脚本加入 crontab, 由于需重启 daemon，请使用 root 的 crontab
```bash
crontab -e
在最后一行加入， 注意将路径替换成你脚本保存的路径&lt;/li&gt;
&lt;li&gt;* * * * /YOUR PATH/monitor.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
```&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;###客户端配置
* 保存以下脚本&lt;code&gt;proxy_monitor.sh&lt;/code&gt;
其中的 vpsip 直接填服务端的 ip 或替换脚本中的 &lt;code&gt;YOUR DOMAIN&lt;/code&gt; 为服务端的域名
testip 中 curl 后的&lt;code&gt;socks5://127.0.0.1:1080&lt;/code&gt;为 proxy 的地址，请自行替换
将 &lt;code&gt;YOUR PROXY DAEMON NAME&lt;/code&gt; 改成客户端的 Daemon 名字&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-BASH&#34;&gt;#!/bin/bash

vpsip=`nslookup YOUR DOMAIN | awk &#39;/^Address: / { print $2 }&#39;`
testip=`curl -sx socks5://127.0.0.1:1080 http://icanhazip.com -m 2`
rs=$?

if [[ $rs -eq 0 ]] &amp;amp;&amp;amp; [[ ${testip} = ${vpsip} ]]; then
	exit 0
elif [[ $rs -eq 28 ]]; then
	echo `date +%X` &#39;Proxy stucked, restarting&#39;
	curl --user YOURUSERNAME:YOURPASSWORD --data &amp;quot;restart=1&amp;quot; http://YOURDOMAIN.COM/proxy/ifproxyworking.php
	/usr/sbin/service YOUR PROXY DAEMON NAME restart
elif [[ $rs -eq 7 ]]; then
	echo `date +%X` &#39;Proxy not running&#39;
fi

exit $rs
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;将脚本加入 crontab, 由于需重启 daemon，请使用 root 的 crontab&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;crontab -e
在最后一行加入， 注意将路径替换成你脚本保存的路径
* * * * * /YOUR PATH/proxy_monitor.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>自建rss服务并适配 IOS 移动端（ TTRSS &#43; Fever )</title>
      <link>https://netcookies.github.io/b/4share/2016-04-25/</link>
      <pubDate>Mon, 25 Apr 2016 13:43:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2016-04-25/</guid>
      <description>

&lt;p&gt;##前言
博主不会正确吐槽，以下两段纯属凑字数，RSS 相关请直接阅读第二章节。&lt;/p&gt;

&lt;p&gt;长久以来一直都是黑莓的情怀用户，然而黑莓实在是太不争气，其主打的最新移动终端操作系统 BB10 居然被 Facebook 放弃支持了。同时 FB 旗下的 Whatsapp 也宣布与 2016 年停止版本迭代，这可是我与夫人保持联系的主要 IM，遂只好和我心爱的 Passport 说再见了。毕竟在 Whatsapp 不能用，微信、QQ 更无意发布 BB10 原生应用的条件下，总不能把情怀当短信用吧。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;~/12917858_1341172869242553_173701527_n.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这些天把 Passport 放入了抽屉，总算是投了 IP6s 的怀抱，做起了街机党，不得不说 Appstore 的生态环境确实是所有智能机平台中最棒的，吸引了无数优秀的开发者。其中 Unread 最好的 RSS 阅读应用之一。&lt;/p&gt;

&lt;p&gt;Unread 提供多种 RSS 服务接入，大致分三种：收费的土豪月供 RSS 服务；免费的 Feedly 但刷新不及时又时常被墙；自建 RSS 服务（ Fever 永久授权 $30 ）。在 Feedly 不堪大用的情况下，这里咱们瞄准 Ferver ，然而 $30 只是刷个新闻也实在是性价比不高，所幸开源的 TTRSS 给咱们提供了很好的解决方案。&lt;/p&gt;

&lt;h2 id=&#34;ttrss-fever-完整的-web-和-移动端-rss-阅读的实现方法&#34;&gt;TTRSS + FEVER 完整的 Web 和 移动端 RSS 阅读的实现方法&lt;/h2&gt;

&lt;p&gt;Requires:
1. Deian 7 VPS 一台
2. IPhone 6s 一部
3. Lighttpd 高性能 Web 服务端（ Apache、Ngnix 都可以 )
4. Php 5.4+
5. Postgresql 9.1+ or Mysql&lt;/p&gt;

&lt;h3 id=&#34;搭建-ttrss-服务端&#34;&gt;搭建 TTRSS 服务端&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;安装必须的软件&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get install lighttpd postgresql postgresql-client php5-common php5-cgi php5-cli php5-curl php5-fpm php5-pgsql php-apc
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;配置数据库&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;新建 Linux 用户 ttrss &lt;code&gt;[sudo] adduser ttrss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用 Postgresql 系统用户连接系统 &lt;code&gt;[sudo] su postgres -c psql template1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建新的数据库用户、新数据库，并赋予新用户新数据库的全部权限&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;postgres=# CREATE USER ttrss WITH PASSWORD &#39;YOURPASSWORD&#39;;
postgres=# CREATE DATABASE ttrss;
postgres=# GRANT ALL PRIVILEGES ON DATABASE ttrss to ttrss;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;更改超级账户 postgresq 的密码&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;postgres=# ALTER USER postgres WITH PASSWORD &#39;yourpassword&#39; 
postgres=# \q
passwd postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;postgresql的其它疑问参考 &lt;a href=&#34;https://wiki.debian.org/PostgreSql&#34;&gt;链接&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;安装tt-rss&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;下载tt-rss&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /var/www
git clone https://tt-rss.org/git/tt-rss.git tt-rss
chown www-data:www-data -R /var/www/tt-rss
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;配置 lighttpd + php5&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 备份 15-fastcgi-php.conf 为 15-fastcgi-php-spwanfcgi.conf
cd /etc/lighttpd/conf-available/
cp 15-fastcgi-php.conf 15-fastcgi-php-spawnfcgi.conf

# 修改 15-fastcgi-php.conf 内容如下
# -*- depends: fastcgi -*-
# /usr/share/doc/lighttpd/fastcgi.txt.gz
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ConfigurationOptions#mod_fastcgi-fastcgi

## Start an FastCGI server for php (needs the php5-cgi package)
fastcgi.server += ( &amp;quot;.php&amp;quot; =&amp;gt;
        ((
                &amp;quot;socket&amp;quot; =&amp;gt; &amp;quot;/var/run/php5-fpm.sock&amp;quot;,
                &amp;quot;broken-scriptfilename&amp;quot; =&amp;gt; &amp;quot;enable&amp;quot;
        ))
)

# 加载修改后的配置调用 php5-fpm
lighttpd-enable-mod fastcgi fastcgi-php
/etc/init.d/lighttpd force-reload
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;通过 web 安装界面初始化 tt-rss: &lt;code&gt;http://your.site.com/tt-rss/install/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置服务 UpdatingFeeds，用于定期自动抓取 RSS 源&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 官方的方法 https://tt-rss.org/gitlab/fox/tt-rss/wikis/UpdatingFeeds
cd /etc/default
wget https://raw.githubusercontent.com/netcookies/howto.biapy.com/master/web-applications/tiny-tiny-rss/tt-rss.default -o tt-rss
cd /etc/init.d
wget https://raw.githubusercontent.com/netcookies/howto.biapy.com/master/web-applications/tiny-tiny-rss/tt-rss.init-d -o tt-rss
update-rc.d tt-rss default
service tt-rss start
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;安装主题和插件&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 模拟 fever 接口插件
cd ~
wget https://github.com/dasmurphy/tinytinyrss-fever-plugin/archive/master.zip
unzip master.zip
cd tinytinyrss-fever-plugin-master
cp -r fever/ /var/www/tt-rss/plugins/
cd ~
rm -rf master.zip
rm -rf tinytinyrss-fever-plugin-master
# web 端主题, feedly
wget https://github.com/levito/tt-rss-feedly-theme/archive/master.zip
unzip master.zip
cd tt-rss-feedly-theme-master
cp feedly.css /var/www/tt-rss/themes
cp -r feedly/ /var/www/tt-rss/themes
cd ~
rm -rf master.zip
rm -rf tt-rss-feedly-theme-master
# web 端主题, reeder
wget https://github.com/tschinz/tt-rss_reeder_theme/archive/master.zip
unzip master.zip
cd tt-rss_reeder_theme-master
cp reeder.css /var/www/tt-rss/themes
cp -r reeder/ /var/www/tt-rss/themes
cd ~
rm -rf master.zip
rm -rf tt-rss_reeder_theme-master
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;登陆 tt-rss 启用插件和主题，下面给出两个主题的预览图&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;~/Screen Shot 2016-04-26 at 11.40.54 AM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;~/Screen Shot 2016-04-26 at 11.41.39 AM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;手机端的配置&#34;&gt;手机端的配置&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;手机端的配置很简单，只需要填上账号、密码以及服务地址及可。&lt;/li&gt;
&lt;li&gt;账号为你登录 tt-rss 使用的账号&lt;/li&gt;
&lt;li&gt;密码为你在 tt-rss 的 Fever 插件里设置的密码（密码可以设置与 tt-rss 的密码一致）&lt;/li&gt;
&lt;li&gt;服务器地址为 &lt;a href=&#34;http://your.site.com/tt-rss/plugins/fever/&#34;&gt;http://your.site.com/tt-rss/plugins/fever/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;这里给出 Unread 的示意图（不仅限于 Unread 只要支持 ferver 的 RSS 阅读器都可以)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;embed src=&#34;http://player.youku.com/player.php/sid/XMTU0ODY3NDQ0MA==/v.swf&#34; allowFullScreen=&#34;true&#34; quality=&#34;high&#34; width=&#34;480&#34; height=&#34;400&#34; align=&#34;middle&#34; allowScriptAccess=&#34;always&#34; type=&#34;application/x-shockwave-flash&#34;&gt;&lt;/embed&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一加X ROOT 并安装Xposed(不解锁BootLoader)</title>
      <link>https://netcookies.github.io/b/4share/2016-01-15/</link>
      <pubDate>Fri, 15 Jan 2016 16:46:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2016-01-15/</guid>
      <description>&lt;p&gt;##前言
现在很多安卓手机都做的很好，基本买来不用安装什么App就够用了。但是国内的某些应用各种唤醒各种耗电，逼不得已只能Root阻止各种应用自动唤醒，甚至是自动唤醒他家的所有App。
本文测试机为：&lt;code&gt;一加X&lt;/code&gt;
通常步骤是：
1. 解锁BootLoader
2. Root
3. 安装Xposed
4. 安装绿色守护/阻止运行/禁止唤醒等Xposed模块&lt;/p&gt;

&lt;p&gt;但这样有个弊端就是手机无法OTA了，每次出新的OTA只能下载完整包，双清刷入。再重新安装各种应用，各种烦锁。现在给大家带来&lt;strong&gt;不解锁BootLoader&lt;/strong&gt;Root并安装Xposed的完整操作步骤：
##Download
工欲善其事，必先利其器！先全下载下来。链接: &lt;a href=&#34;http://pan.baidu.com/s/1o6YGlvW&#34;&gt;http://pan.baidu.com/s/1o6YGlvW&lt;/a&gt; 密码: dcep
##Root
* 安装并运行Kingroot(一键root但会下载很多没用的东西且无法删除，不要急接着看），大概2-5分钟就Root完毕了。
* 用SuperSU替换Kingroot&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;安装 Terminal Emulator&lt;/li&gt;
&lt;li&gt;解压 Replace_Kingroot_With_SuperSU.zip 到sd卡根目录, 确保路径是这样的&lt;code&gt;/sdcard/mrw&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;运行 Terminal Emulator, 输入&lt;code&gt;su&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;此时跳出授权框点允许&lt;/li&gt;
&lt;li&gt;运行命令替换SuperSU，并删除Kingroot&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd /&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sh /sdcard/mrw/root.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;##如何OTA?以及OTA后如何恢复Root
1. 下载OTA完整包
2. 进入原厂Recovery
3. 刷入OTA包
4. 重复上面的Root步骤&lt;/p&gt;

&lt;p&gt;##如何不使用TWRP安装Xposed
1. 安装并运行FlashFire
2. 选择Flash ZIP or OTA
3. 选择Xposed-v79-sdk22-arm.zip（此包根据CPU平台不同自行选择）, 注意&lt;strong&gt;不要勾选Auto-mount&lt;/strong&gt;
4. 点击Flash刷入即可, Loading后可能会黑屏一段时间耐心等待10-30分钟即可。
5. 重启完成后安装 Xposed即可&lt;/p&gt;

&lt;p&gt;参考链接：
&lt;a href=&#34;http://forum.xda-developers.com/oneplus-x/general/guide-root-oneplus-x-twrp-pc-t3251027&#34;&gt;link1&lt;/a&gt;
&lt;a href=&#34;http://forum.xda-developers.com/g4/themes-apps/guide-installing-xposed-locked-t3181593&#34;&gt;link2&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspberry Pi编译驱动（8188eu)</title>
      <link>https://netcookies.github.io/b/4share/2015-11-04/</link>
      <pubDate>Wed, 04 Nov 2015 16:56:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2015-11-04/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;下载内核源码,，用&lt;code&gt;uname -r&lt;/code&gt;查看本机内核
&lt;code&gt;
wget https://github.com/raspberrypi/linux/archive/rpi-4.0.y.tar.gz
tar xzf rpi-4.0.y.tar.gz
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;确保gcc版本是4.6&lt;code&gt;gcc -v&lt;/code&gt;， 4.8无法正常编译内核&lt;/li&gt;
&lt;li&gt;将源码移至目录&lt;code&gt;/usr/src&lt;/code&gt;，并建立软链至&lt;code&gt;/lib/modules/&lt;/code&gt;
&lt;code&gt;
[sudo] mv linux-rpi-4.0.y /usr/src
[sudo] ln -s /usr/src/linux-rpi-4.0.y /lib/modules/`uname -r`/build
cd /lib/modules/`uname -r`/build
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;clean下源码，生成make的config，预备编译内核
&lt;code&gt;
make mrproper
modprobe configs  
zcat /proc/config.gz &amp;gt; .config
modules_prepare
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;为了节约时间不重头编译内核，下载&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;updated: 此文件会随着内核版本变动，请下载对应版本，否则就算编译成功也不可用，版本参考&lt;a href=&#34;https://github.com/raspberrypi/firmware/commit/13aa07f322b6f1645508b5c24ad70035f2a963d5&#34;&gt;https://github.com/raspberrypi/firmware/commit/13aa07f322b6f1645508b5c24ad70035f2a963d5&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://github.com/raspberrypi/firmware/raw/master/extra/Module7.symvers
cp Module7.symvers Module.symvers
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;编译驱动8188eu
&lt;code&gt;
cd ~
wget https://github.com/lwfinger/rtl8188eu/archive/master.zip
unzip master.zip
rm -rf master.zip
cd rtl8188eu
sudo make -j4
sudo make install
&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;参考链接：
&lt;a href=&#34;http://kollocc.blogspot.com/2013/12/raspberry-pi.html&#34;&gt;link1&lt;/a&gt;
&lt;a href=&#34;http://m.blog.csdn.net/blog/dyc12292/47039637&#34;&gt;link2&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shadowsocks 安装配置常见问题解答</title>
      <link>https://netcookies.github.io/b/4share/2015-10-23/</link>
      <pubDate>Fri, 23 Oct 2015 21:07:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2015-10-23/</guid>
      <description>

&lt;h3 id=&#34;init-system-helpers-缺失&#34;&gt;init-system-helpers 缺失&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;vps 用的是 debian-minimal 或 ubuntu-minimal系统时，apt-get install 有的包时可能会提示以上错误&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Depends: init-system-helpers (&amp;gt;= 1.18~) but it is not installable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法一：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget http://launchpadlibrarian.net/173841617/init-system-helpers_1.18_all.deb
dpkg -i init-system-helpers_1.18_all.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法二：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;deb http://http.debian.net/debian wheezy-backports main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1024-以内端口-bind-权限不足&#34;&gt;1024 以内端口 bind 权限不足？&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;setcap &#39;cap_net_bind_service=+ep&#39; /path/to/program
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Raspberry Pi 搭建Anyconnect VPN</title>
      <link>https://netcookies.github.io/b/4share/2015-09-29/</link>
      <pubDate>Tue, 29 Sep 2015 23:12:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2015-09-29/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Debian &amp;gt;=7, ubuntu &amp;gt;=14.04 的可以直接使用这个脚本一键安装&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;https://github.com/fanyueciyuan/eazy-for-ss/tree/master/ocservauto&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Raspberry Pi 比较特殊点有些地方需要改进，我们改为手工编译，原始脚本的链接是在&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;https://github.com/humiaozuzu/ocserv-build/blob/master/build-src.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;稍加修改，使用最新版本的ocserv-0.10.8，编译liblz4，开启Compression(lz4)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

apt-get install -y build-essential autogen pkg-config texinfo libhogweed2 libgmp3-dev gettext
apt-get install -y libxml2-dev libgeos++-dev libpq-dev libbz2-dev libreadline-dev libtool automake
apt-get install -y unbound-anchor
mkdir /etc/unbound
unbound-anchor -a &amp;quot;/etc/unbound/root.key&amp;quot;

mkdir -p /opt/src

cd /opt/src
wget http://www.lysator.liu.se/~nisse/archive/nettle-2.7.tar.gz
wget ftp://ftp.gnu.org/gnu/nettle/nettle-3.2.tar.gz
tar xvzf nettle-3.2.tar.gz
cd /opt/src/nettle-3.2
./configure --enable-shared --prefix=/opt/local --disable-assembler
make
make install

cd /opt/src
wget http://ftp.gnu.org/gnu/libtasn1/libtasn1-4.8.tar.gz
tar xvzf libtasn1-4.8.tar.gz
cd /opt/src/libtasn1-4.8
./configure --prefix=/opt/local
make
make install

cd /opt/src
wget ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz
tar xvzf libffi-3.2.1.tar.gz
cd /opt/src/libffi-3.2.1
./configure --prefix=/opt/local
make
make install

cd /opt/src
wget https://p11-glue.freedesktop.org/releases/p11-kit-0.23.2.tar.gz
tar xvzf p11-kit-0.23.2.tar.gz
cd /opt/src/p11-kit-0.23.2
PKG_CONFIG_PATH=/opt/local/lib/pkgconfig ./configure --prefix=/opt/local
make
make install

cd /opt/src
wget ftp://ftp.gnutls.org/gcrypt/gnutls/v3.4/gnutls-3.4.9.tar.xz
tar xvfJ gnutls-3.4.9.tar.xz
cd /opt/src/gnutls-3.4.9
PKG_CONFIG_PATH=/opt/local/lib/pkgconfig ./configure --enable-shared --prefix=/opt/local
make
make install

cd /opt/src
mkdir lz4
LZ4_VERSION=`curl -s &amp;quot;https://github.com/Cyan4973/lz4/releases/latest&amp;quot; | sed -n &#39;s/^.*tag\/\(.*\)&amp;quot;.*/\1/p&#39;` 
curl -SL &amp;quot;https://github.com/Cyan4973/lz4/archive/$LZ4_VERSION.tar.gz&amp;quot; -o lz4.tar.gz
tar -xf lz4.tar.gz -C lz4 --strip-components=1 
cd lz4 
make -j&amp;quot;$(nproc)&amp;quot; &amp;amp;&amp;amp; make install
cd ..
ln -sf /usr/local/lib/liblz4.* /usr/lib/

cd /opt/src
wget https://www.openssl.org/source/openssl-1.0.1s.tar.gz
tar xvzf openssl-1.0.1s.tar.gz
cd /opt/src/openssl-1.0.1s
./config
make depend
make
make install

cd /opt/src
wget https://github.com/netcookies/ocserv-backup/raw/master/ocserv-0.10.8.tar.xz
tar xvf ocserv-0.10.8.tar.xz
cd /opt/src/ocserv-0.10.8
PKG_CONFIG_PATH=/opt/local/lib/pkgconfig ./configure --prefix=/opt/ocserv
LD_LIBRARY_PATH=/opt/local/lib make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;编译安装成功后，运行以下命令测试下是否安装成功&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;LD_LIBRARY_PATH=/opt/local/lib /opt/ocserv/sbin/ocserv --help&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;附上一些配置文件：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;/opt/ocserv/etc/config&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#auth = &amp;quot;certificate&amp;quot;
auth = &amp;quot;plain[passwd=/opt/ocserv/etc/ocpasswd]&amp;quot;
enable-auth = certificate
max-clients = 1024
max-same-clients = 0
tcp-port = 4443
udp-port = 4443
keepalive = 32400
dpd = 120
mobile-dpd = 1800
try-mtu-discovery = true
compression = true
server-cert = /opt/ocserv/ca/server-cert.pem
server-key = /opt/ocserv/ca/server-key.pem
ca-cert = /opt/ocserv/ca/ca-cert.pem
cert-user-oid = 2.5.4.3
#listen-host-is-dydns = true

tls-priorities = &amp;quot;NORMAL:%SERVER_PRECEDENCE:%COMPAT:-VERS-SSL3.0&amp;quot;
auth-timeout = 40
min-reauth-time = 120
cookie-timeout = 300
deny-roaming = false
rekey-time = 172800
rekey-method = ssl
use-utmp = true
use-occtl = true
pid-file = /var/run/ocserv.pid
socket-file = /var/run/ocserv-socket
run-as-user = nobody
run-as-group = daemon
device = vpns
output-buffer = 23000
# default-domain = example.com
ipv4-network = 10.0.2.0
ipv4-netmask = 255.255.255.0
dns = 8.8.8.8
dns = 8.8.4.4
ping-leases = false
cisco-client-compat = true

route = 10.20.30.0/255.255.255.0 #vpn服务器端内网的网段
no-route = 0.0.0.0/0.0.0.0 #默认其它流量不指向vpn,只当访问对端内网时指向vpn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;no-route和router按实际需求添加&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;/opt/ocserv/etc/ocserv-up.sh&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

#vars
OCSERV_CONFIG=&amp;quot;/opt/ocserv/etc/config&amp;quot;

# turn on IP forwarding
#sysctl -w net.ipv6.conf.all.forwarding=1 &amp;gt; /dev/null 2&amp;gt;&amp;amp;1
sysctl -w net.ipv4.ip_forward=1 &amp;gt; /dev/null 2&amp;gt;&amp;amp;1

#get gateway and profiles
gw_intf_oc=`ip route show 0/0 | sort -k 7 | head -n 1 | sed -n &#39;s/^default.* dev \([^ ]*\).*/\1/p&#39;`
ocserv_tcpport=`sed -n &#39;s/^tcp-.*=[ \t]*//p&#39; $OCSERV_CONFIG`
ocserv_udpport=`sed -n &#39;s/^udp-.*=[ \t]*//p&#39; $OCSERV_CONFIG`
ocserv_ip4_work_mask=`sed -n &#39;s/^ipv4-.*=[ \t]*//p&#39; $OCSERV_CONFIG|sed &#39;N;s|\n|/|g&#39;`

# turn on NAT over default gateway and VPN
if !(iptables-save -t nat | grep -q &amp;quot;$gw_intf_oc (ocserv)&amp;quot;); then
iptables -t nat -A POSTROUTING -s $ocserv_ip4_work_mask ! -d $ocserv_ip4_work_mask -m comment --comment &amp;quot;$gw_intf_oc (ocserv)&amp;quot; -j MASQUERADE
fi

if !(iptables-save -t filter | grep -q &amp;quot;$gw_intf_oc (ocserv2)&amp;quot;); then
iptables -A FORWARD -d $ocserv_ip4_work_mask -m comment --comment &amp;quot;$gw_intf_oc (ocserv2)&amp;quot; -j ACCEPT
fi

if !(iptables-save -t filter | grep -q &amp;quot;$gw_intf_oc (ocserv3)&amp;quot;); then
iptables -A INPUT -p tcp --dport $ocserv_tcpport -m comment --comment &amp;quot;$gw_intf_oc (ocserv3)&amp;quot; -j ACCEPT
fi

if [ &amp;quot;$ocserv_udpport&amp;quot; != &amp;quot;&amp;quot; ]; then
    if !(iptables-save -t filter | grep -q &amp;quot;$gw_intf_oc (ocserv4)&amp;quot;); then
        iptables -A INPUT -p udp --dport $ocserv_udpport -m comment --comment &amp;quot;$gw_intf_oc (ocserv4)&amp;quot; -j ACCEPT
    fi
fi

if !(iptables-save -t filter | grep -q &amp;quot;$gw_intf_oc (ocserv5)&amp;quot;); then
iptables -A FORWARD  -s $ocserv_ip4_work_mask -m state --state RELATED,ESTABLISHED -m comment --comment &amp;quot;$gw_intf_oc (ocserv5)&amp;quot; -j ACCEPT
fi

# turn on MSS fix
# MSS = MTU - TCP header - IP header
if !(iptables-save -t mangle | grep -q &amp;quot;$gw_intf_oc (ocserv6)&amp;quot;); then
iptables -t mangle -A FORWARD -p tcp -m tcp --tcp-flags SYN,RST SYN -m comment --comment &amp;quot;$gw_intf_oc (ocserv6)&amp;quot; -j TCPMSS --clamp-mss-to-pmtu
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/opt/ocserv/etc/ocserv-down.sh&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# uncomment if you want to turn off IP forwarding
# sysctl -w net.ipv4.ip_forward=0

#del iptables

iptables-save | grep &#39;ocserv&#39; | sed &#39;s/^-A P/iptables -t nat -D P/&#39; | sed &#39;s/^-A FORWARD -p/iptables -t mangle -D FORWARD -p/&#39; | sed &#39;s/^-A/iptables -D/&#39; | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/etc/init.d/ocserv&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh
### BEGIN INIT INFO
# Provides:          ocserv
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: ocserv
# Description:       OpenConnect VPN server compatible with
#                    Cisco AnyConnect VPN.
### END INIT INFO

# Author: liyangyijie &amp;lt;liyangyijie@gmail.com&amp;gt;

# PATH should only include /usr/ if it runs after the mountnfs.sh script
PATH=/opt/ocserv/sbin:/opt/ocserv/bin:/sbin:/usr/sbin:/bin:/usr/bin
DESC=ocserv
NAME=ocserv
DAEMON=/opt/ocserv/sbin/ocserv
DAEMON_ARGS=&amp;quot;&amp;quot;
CONFFILE=&amp;quot;/opt/ocserv/etc/config&amp;quot;
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
SERVER_UP=&amp;quot;/opt/ocserv/etc/ocserv-up.sh&amp;quot;
SERVER_DOWN=&amp;quot;/opt/ocserv/etc/ocserv-down.sh&amp;quot;

# Exit if the package is not installed
[ -x $DAEMON ] || exit 0

: ${USER:=&amp;quot;root&amp;quot;}
: ${GROUP:=&amp;quot;root&amp;quot;}

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (&amp;gt;= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

# Show details
VERBOSE=&amp;quot;yes&amp;quot;

#
# Function that starts the daemon/service
#
do_start()
{
    # Add server up script
    [ -x ${SERVER_UP} ] &amp;amp;&amp;amp; . ${SERVER_UP}

    # Take care of pidfile permissions
    mkdir /var/run/$NAME 2&amp;gt;/dev/null || true
    chown &amp;quot;$USER:$GROUP&amp;quot; /var/run/$NAME
    export LD_LIBRARY_PATH=/opt/local/lib
    
    # Return
    #   0 if daemon has been started
    #   1 if daemon was already running
    #   2 if daemon could not be started
    start-stop-daemon --start --quiet --pidfile $PIDFILE --chuid $USER:$GROUP --exec $DAEMON --test &amp;gt; /dev/null \
        || return 1
    start-stop-daemon --start --quiet --pidfile $PIDFILE --chuid $USER:$GROUP --exec $DAEMON -- \
        -c &amp;quot;$CONFFILE&amp;quot; $DAEMON_ARGS \
        || return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
    # Add server down script
    [ -x ${SERVER_DOWN} ] &amp;amp;&amp;amp; . ${SERVER_DOWN}

    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    start-stop-daemon --stop --quiet --retry=KILL/5 --pidfile $PIDFILE --exec $DAEMON
    RETVAL=&amp;quot;$?&amp;quot;
    [ &amp;quot;$RETVAL&amp;quot; = 2 ] &amp;amp;&amp;amp; return 2
    # Wait for children to finish too if this is a daemon that forks
    # and if the daemon is only ever run from this initscript.
    # If the above conditions are not satisfied then add some other code
    # that waits for the process to drop all resources that could be
    # needed by services started subsequently.  A last resort is to
    # sleep for some time.
    start-stop-daemon --stop --quiet --oknodo --retry=KILL/5 --exec $DAEMON
    [ &amp;quot;$?&amp;quot; = 2 ] &amp;amp;&amp;amp; return 2
    # Many daemons don&#39;t delete their pidfiles when they exit.
    rm -f $PIDFILE
    return &amp;quot;$RETVAL&amp;quot;
}


case &amp;quot;$1&amp;quot; in
    start)
        [ &amp;quot;$VERBOSE&amp;quot; != no ] &amp;amp;&amp;amp; log_daemon_msg &amp;quot;Starting $DESC &amp;quot; &amp;quot;$NAME&amp;quot;
        do_start
        case &amp;quot;$?&amp;quot; in
            0|1) [ &amp;quot;$VERBOSE&amp;quot; != no ] &amp;amp;&amp;amp; log_end_msg 0 ;;
            2) [ &amp;quot;$VERBOSE&amp;quot; != no ] &amp;amp;&amp;amp; log_end_msg 1 ;;
        esac
    ;;
    stop)
    [ &amp;quot;$VERBOSE&amp;quot; != no ] &amp;amp;&amp;amp; log_daemon_msg &amp;quot;Stopping $DESC&amp;quot; &amp;quot;$NAME&amp;quot;
    do_stop
    case &amp;quot;$?&amp;quot; in
    0|1) [ &amp;quot;$VERBOSE&amp;quot; != no ] &amp;amp;&amp;amp; log_end_msg 0 ;;
        2) [ &amp;quot;$VERBOSE&amp;quot; != no ] &amp;amp;&amp;amp; log_end_msg 1 ;;
    esac
    ;;
    debug)
        DAEMON_ARGS=&amp;quot;-f -d 2&amp;quot;
        [ &amp;quot;$2&amp;quot; != &amp;quot;&amp;quot; ] &amp;amp;&amp;amp; DAEMON_ARGS=&amp;quot;-f -d $2&amp;quot;
        [ &amp;quot;$VERBOSE&amp;quot; != no ] &amp;amp;&amp;amp; log_daemon_msg &amp;quot;Starting $DESC &amp;quot; &amp;quot;$NAME&amp;quot;
        do_start
        case &amp;quot;$?&amp;quot; in
            0|1) [ &amp;quot;$VERBOSE&amp;quot; != no ] &amp;amp;&amp;amp; log_end_msg 0 ;;
            2) [ &amp;quot;$VERBOSE&amp;quot; != no ] &amp;amp;&amp;amp; log_end_msg 1 ;;
        esac
    ;;
    status)
        status_of_proc &amp;quot;$DAEMON&amp;quot; &amp;quot;$NAME&amp;quot; &amp;amp;&amp;amp; exit 0 || exit $?
    ;;
    restart|force-reload)
        log_daemon_msg &amp;quot;Restarting $DESC&amp;quot; &amp;quot;$NAME&amp;quot;
        do_stop
        case &amp;quot;$?&amp;quot; in
            0|1)
                do_start
                case &amp;quot;$?&amp;quot; in
                    0) log_end_msg 0 ;;
                    1) log_end_msg 1 ;; # Old process is still running
                    *) log_end_msg 1 ;; # Failed to start
                esac
            ;;
            *)
            # Failed to stop
            log_end_msg 1
            ;;
        esac
    ;;
    *)
    echo &amp;quot;Usage: $SCRIPTNAME {start|stop|status|restart|force-reload|debug}&amp;quot; &amp;gt;&amp;amp;2
    exit 3
    ;;
esac
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;开机启动服务&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x /etc/init.d/ocserv
update-rc.d ocserv defaults 99
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;如果要使用证书认证，可以使用以下脚本一键生成，将生成的p12后缀文件在客户端导入即可&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

AUTHOR=&amp;quot;Maple&amp;quot;
VPN=&amp;quot;Cisco SG for Maple&amp;quot;
DOMAIN=&amp;quot;miao.hu&amp;quot;
CLIENT=&amp;quot;user&amp;quot;

cd /opt/ocserv
mkdir ca
cd ca

cat &amp;lt;&amp;lt; EOF &amp;gt; ca.tmpl
cn = &amp;quot;$VPN&amp;quot;
organization = &amp;quot;$AUTHOR&amp;quot;
serial = 1
expiration_days = 1000
ca
signing_key
cert_signing_key
crl_signing_key
EOF

cat &amp;lt;&amp;lt; EOF &amp;gt; server.tmpl
cn = &amp;quot;$DOMAIN&amp;quot;
organization = &amp;quot;$AUTHOR&amp;quot;
serial = 2
expiration_days = 1000
signing_key
encryption_key
tls_www_server
EOF

certtool --generate-privkey --outfile ca-key.pem
certtool --generate-self-signed --load-privkey ca-key.pem --template ca.tmpl --outfile ca-cert.pem
certtool --generate-privkey --outfile server-key.pem
certtool --generate-certificate --load-privkey server-key.pem \
--load-ca-certificate ca-cert.pem --load-ca-privkey ca-key.pem \
--template server.tmpl --outfile server-cert.pem

cat &amp;lt;&amp;lt; EOF &amp;gt; user.tmpl
cn = &amp;quot;$CLIENT&amp;quot;
serial = 1824
expiration_days = 1000
signing_key
tls_www_client
EOF

certtool --generate-privkey --outfile user-key.pem
certtool --generate-certificate --load-privkey user-key.pem --load-ca-certificate ca-cert.pem --load-ca-privkey ca-key.pem --template user.tmpl --outfile user-cert.pem
openssl pkcs12 -export -clcerts -in user-cert.pem -inkey user-key.pem -out user.p12
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;其它问题： 如果ocserv所安装的服务器采用wlan0连接外网的话，可能会出现一启用vpn网络就断开的情况，则需要编辑&lt;code&gt;/etc/defaults/ifplugd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;...
INTERFACES=&amp;quot;auto&amp;quot;
HOTPLUG_INTERFACES=&amp;quot;eth0 wlan0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;参考：&lt;/em&gt;
&lt;a href=&#34;https://github.com/fanyueciyuan/eazy-for-ss/tree/master/ocservauto&#34;&gt;fanyueciyuan/eazy-for-ss&lt;/a&gt;
&lt;a href=&#34;https://github.com/humiaozuzu/ocserv-build&#34;&gt;humiaozuzu/ocserv-build&lt;/a&gt;
&lt;a href=&#34;http://www.boxtricks.com/raspberry-pi-drops-wireless-connect-after-openvpn-is-started/&#34;&gt;http://www.boxtricks.com/raspberry-pi-drops-wireless-connect-after-openvpn-is-started/&lt;/a&gt;
&lt;a href=&#34;http://superuser.com/questions/513351/debian-eth0-to-wlan0-forwarding-with-openvpn&#34;&gt;http://superuser.com/questions/513351/debian-eth0-to-wlan0-forwarding-with-openvpn&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blackberry 10 系统穿墙指北</title>
      <link>https://netcookies.github.io/b/4share/2015-08-24/</link>
      <pubDate>Mon, 24 Aug 2015 23:42:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2015-08-24/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;设置&lt;/li&gt;
&lt;li&gt;wifi&lt;/li&gt;
&lt;li&gt;长按需要穿墙的wifi名称、点编辑&lt;/li&gt;
&lt;li&gt;使用代理服务器&lt;/li&gt;
&lt;li&gt;自动代理服务器(PAC)&lt;/li&gt;
&lt;li&gt;URL里输入 &lt;a href=&#34;https://pac.itzmx.com/abc.pac&#34;&gt;https://pac.itzmx.com/abc.pac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;保存即可&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Win10 VPN TCP/IP属性无法打开解决办法</title>
      <link>https://netcookies.github.io/b/4share/2015-08-08/</link>
      <pubDate>Sat, 08 Aug 2015 22:54:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2015-08-08/</guid>
      <description>&lt;p&gt;升级win10后，在网络适配器中无法正常打开TCP/IP IPV4/V6的属性对话框。
如果需要更改“在远程网络上使用默认网关”，即所有的网络请求都走vpn，不论是内外网。
可以用下面的命令workaround下，首先打开powershell（直接通过win10的搜索功能打开或通过开始菜单里找）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;Get-VpnConnection
Set-VpnConnection -Name &amp;quot;myVPN&amp;quot; -SplitTunneling $True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过&lt;code&gt;Get-VpnConnection&lt;/code&gt;得到vpn的名字，再通过&lt;code&gt;Set-VpnConnection&lt;/code&gt;来更改对应的属性&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Black Passport进阶操作指南（三）</title>
      <link>https://netcookies.github.io/b/4share/2015-02-04/</link>
      <pubDate>Wed, 04 Feb 2015 15:03:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2015-02-04/</guid>
      <description>&lt;p&gt;转眼到手半个月了，PP已然胜任主力机，只是需要比IOS, Android花更多心思。
有几个问题分享下，以免大家再走弯路&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;新版微信和QQ图标显示不出来的问题，大家可以到百度盘里下载转制好的bar文件，我已经放到百度盘的bar文件夹内了。&lt;a href=&#34;http://pan.baidu.com/s/1o6mMxqa&#34;&gt;链接在此&lt;/a&gt;
&lt;em&gt;附：&lt;a href=&#34;http://mytiankong.com/?p=10515&#34;&gt;bar文件安装方法&lt;/a&gt; | &lt;a href=&#34;http://apk2bar.org&#34;&gt;在线转制&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NEVER USE BBLINK EVER!&lt;/strong&gt;  血泪搬的教训，没事别用BBLINK备份还原，亲身经历备份3个小时以上！你以为这就是个头了吗？NO！9G的包还原&lt;code&gt;3个小时&lt;/code&gt;连&lt;code&gt;1%&lt;/code&gt;都不到，最后只好把联系人和系统设置还原下，总共&lt;code&gt;18M&lt;/code&gt;,用时&lt;code&gt;1个小时&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;非原生的安卓程序的自动更新，不建议大家通过此种渠道更新。可能会造成BB10权限混乱，此款程序&lt;strong&gt;永久消失，无法再安装&lt;/strong&gt;，只能恢复出厂设置。&lt;code&gt;安全的方法有两种： 卸载原程序后再安装；完全关闭程序（结束后台），确认更新后的程序签名一致再安装。&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;欢迎转载，天王盖地虎，博主pin:2BEEC35D&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Black Passport进阶操作指南（二）</title>
      <link>https://netcookies.github.io/b/4share/2015-01-25/</link>
      <pubDate>Sun, 25 Jan 2015 22:06:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2015-01-25/</guid>
      <description>&lt;p&gt;PP自带的10.3系统电量控制还是不错的，但一种情况除外：就是你装了一堆的国产免费安卓应用，诸如不管你是聊天还是看新闻；或是查个字典，美图秀秀个图片；更不用说淘宝百度全家福，开其中一个唤醒全家App。电量那是刷刷刷的往下掉，原来可以用个两三天，现在一天一充不是梦&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;当然博主不是光吐槽不办事，现在给出原创的办法：&lt;/p&gt;

&lt;p&gt;运用安卓神器级的软件&lt;code&gt;绿色守护&lt;/code&gt;，下面贴出软件的介绍：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;绿色守护Greenify可以帮助你甄别那些对系统全局性能和耗电量有不良影响的应用程序，这是一个完全绿色（不包括推送、定时更新等功能）的App，是否经常有些恶意程序或应用会消耗您的手机电池电量、损耗您的手机内存？现在有了绿色守护，这些都不用担心，它有独特的“绿色化”专利技术，帮您解决这些难题，设定一次，忘却烦恼。
绿色守护软件可以在手机待机之时「静默」的将黑名单中的 App 强制关闭掉，不让其进行无聊的推送，这样在运行大型程序之后，可以有效的释放系统内存，并降低手机的唤醒概率，达到省电的目的。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;详细介绍可以自行百度，或点击&lt;a href=&#34;http://www.appinn.com/greenify-android/&#34;&gt;小众软件的链接&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;安装&lt;a href=&#34;http://nznd.org/post/4share/2015-01-17&#34;&gt;手势启动软件Gesture Search&lt;/a&gt;、&lt;a href=&#34;http://nznd.org/post/4share/2015-01-17&#34;&gt;绿色守护Greenify&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;此时启动绿色守护，会看到标题提示&lt;code&gt;自动休眠已关闭&lt;/code&gt;，当然我们的最终目的是&lt;code&gt;自动休眠&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动Gesture Search，如图操作划个&lt;code&gt;设&lt;/code&gt;字
&lt;img src=&#34;http://netcookies.github.io/fbcdn/blog_img_assets/post/150125IMG1.jpg&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;打开检索到的&lt;code&gt;设置&lt;/code&gt;
&lt;img src=&#34;http://netcookies.github.io/fbcdn/blog_img_assets/post/150125IMG2.jpg&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;进入&lt;code&gt;辅助设置&lt;/code&gt;
&lt;img src=&#34;http://netcookies.github.io/fbcdn/blog_img_assets/post/150125IMG3.jpg&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;设置绿色守护为&lt;code&gt;开启&lt;/code&gt;状态
&lt;img src=&#34;http://netcookies.github.io/fbcdn/blog_img_assets/post/150125IMG4.jpg&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;再次打开绿色守护，点击选项&lt;code&gt;试验性特性&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设定&lt;code&gt;工作模式&lt;/code&gt;=&lt;code&gt;非root模式&lt;/code&gt;、&lt;code&gt;全自动化休眠（4.1+）&lt;/code&gt;打上勾
&lt;img src=&#34;http://netcookies.github.io/fbcdn/blog_img_assets/post/150125IMG5.jpg&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;返回绿色守护主界面，此时点击右上角&lt;code&gt;+号&lt;/code&gt;将需要休眠的App加入休眠列表中&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;常见问题：
* 全自动休眠如何工作？&lt;/p&gt;

&lt;p&gt;&lt;em&gt;关屏数分钟后，会自动休眠已加入列表中的应用。你会发现数分钟后再次唤醒手机，首先看到的是个黑屏（其实是绿色守护），等几秒可以看到画面停留在最后休眠的应用详情界面&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;我可以手工休眠吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;打开绿色守护，点击ZZZ的图标就可以啦&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;打开绿色守护提示，自动化休眠已终止怎么办？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;点击ZZZ，进入应用详情的界面；直接点后退，回到绿色守护的初始页面即可。此时已经为自动化休眠工作状态，可以直接手工休眠试试&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;还有其它问题？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;欢迎留言，留言了我也不一定知道，知道了我也不一定回。哈哈：）&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;欢迎转载，天王盖地虎，博主pin:2BEEC35D&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Black Passport进阶操作指南（一）</title>
      <link>https://netcookies.github.io/b/4share/2015-01-23/</link>
      <pubDate>Fri, 23 Jan 2015 20:45:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2015-01-23/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;键盘操作总结

&lt;ul&gt;
&lt;li&gt;在大部分原生的程序里，可以进行平行或垂直滚动&lt;/li&gt;
&lt;li&gt;在输入界面，迅速在&lt;code&gt;键盘从上向下滑动&lt;/code&gt;可以，弹出数字和符号界面&lt;/li&gt;
&lt;li&gt;在输入界面，&lt;code&gt;双击键盘&lt;/code&gt;可以调出放大气泡（光标位置），此时可以左右滑动键盘移动气泡&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;需要注意的是BB10有的原生软件在UI上放置了&lt;code&gt;三个点&lt;/code&gt;的扩展功能键，初次使用BB10的用户可能会以为这就是该软件的选项界面。实际上通常打开软件选项的正确入口是&lt;code&gt;从屏幕边界下滑&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在任意界面下，&lt;code&gt;双指从屏幕边界下滑&lt;/code&gt;可以打开快捷设置通知栏&lt;/li&gt;
&lt;li&gt;快捷查看电池的两种方式：

&lt;ul&gt;
&lt;li&gt;通过&lt;code&gt;从屏幕边界上滑&lt;/code&gt;最小化app时，不要松开手指可以看到左上角会临时显示电量百分比&lt;/li&gt;
&lt;li&gt;在系统设置-快捷设置中， 将设备管理器加入快捷设置中，这样在快捷设置中可以看到电量百分比&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;实现系统自带的定时静音功能：

&lt;ul&gt;
&lt;li&gt;日历就是实现定时静音功能的app，没错，你没有听错BB10的隐藏功能太多了，你指不定哪天就会发现新的惊喜&lt;/li&gt;
&lt;li&gt;具体操作： 第一步、将需要静音的时间段加入到日历的事件中&lt;/li&gt;
&lt;li&gt;第二步、 下滑打开日历的设置，开启会议模式&lt;/li&gt;
&lt;li&gt;这样在你所定义的事件时间内，手机会自动切换到会议模式就静音啦
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;暂时总结就这么多，欢迎转载，以后再补充 ：）
天王盖地虎，博主pin:2BEEC35D&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BlackBerry Passport一星期评测</title>
      <link>https://netcookies.github.io/b/4share/2015-01-17/</link>
      <pubDate>Sat, 17 Jan 2015 18:17:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2015-01-17/</guid>
      <description>

&lt;p&gt;前言：&lt;/p&gt;

&lt;h2 id=&#34;pp到手一周了-常用的几个应用该装的也装了-现在把几个测试通过的软件分享给大家&#34;&gt;####PP到手一周了，常用的几个应用该装的也装了，现在把几个测试通过的软件分享给大家：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;软件名称 | 软件类别 | 简介说明 | 下载地址
------- | ------ | ------- | -------
高德地图 | 原生 | 难得的良心软件，语音导航，离线地图 | BBW 
Parrot |原生 | 录音软件，原生的就大大嘀支持 | BBW
KeepassB | 原生 | BB10端最好用的密码管理软件（具体可以自行搜索keepass)，当然BlackBerry自己出的密码管理器也不错，不过坏处是只能在手机上用不能多平台 | BBW
微信 | 原生 | 原生微信的好处是可以HUB推送，不用挂着后台 | BBW
QQ | 非原生 | 疼逊的你不用不行 | [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)
wechat | 非原生 | 微信，比上面原生的那款功能更全 | [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)
手机营业厅 | 非原生 | 联通手机营业厅，用PP应该不会有人不用联通卡吧 | [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)
CMB | 非原生 | 招商银行手机网银，招行的网银一向是所有银行中最棒的，且海淘美亚招行有促销活动 | [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)
网易云音乐 | 非原生 | 网易出品的东西一向良心，有最新版的就自己升级吧 | [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)
有道词典 | 非原生 | 网易出品中广告最多的，这个是去广告版本| [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)
贴吧简版 | 非原生 | 百度贴吧简版修改吧，去广告 | [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)
skype | 非原生 | 与国外朋友家人联系靠这个通话最方便安全了（这个经常自动后台唤醒） | [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;####下面是几个重量级的（也是本文的重点）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;软件名称 | 软件类别 | 简介说明 | 下载地址
------- | ------ | ------- | -------
Greeify | 非原生 | 绿色守护，安卓下最牛b的软件之一，可以绿色化后台（阻止流氓软件后台，什么疼逊，百度一家亲，都是开一个，启动全家后台。用这个基本可以保证后台不会自启） | [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)
PermissionManger | 非原生 | 权限管理，别名App ops，管理程序的权限，安卓4.3kikat原生支持） | [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)
GestureSearch | 非原生 | Google自家出品的手势搜索（后面有介绍用法） | [BaiduPan](http://pan.baidu.com/s/1o6mMxqa)    
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>介绍下KeePass， 用强迫症的方式管理密码</title>
      <link>https://netcookies.github.io/b/4share/2014-09-11/</link>
      <pubDate>Thu, 11 Sep 2014 17:01:00 +0800</pubDate>
      
      <guid>https://netcookies.github.io/b/4share/2014-09-11/</guid>
      <description>&lt;p&gt;今天在&lt;a href=&#34;http://v2ex.com/t/132808#reply17&#34;&gt;v2ex&lt;/a&gt;看到则&lt;code&gt;振奋人心&lt;/code&gt;的消息，500万Gmail用户密码泄漏&amp;hellip;&amp;hellip;虽然经确认发现我的密码没泄漏，但还是决定找个软件好好管理下自己的密码了，经我百般对比，决定就是下面这款啦：&lt;a href=&#34;http://keepass.info/download.html&#34;&gt;KeePass&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;有中文所以一些常用功能就不介绍啦，重点在QQ，支付宝等密码框有做加密防勾子处理的，无法自动输入密码，这里提供下解决方法：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;首先你需要下载这款插件&lt;a href=&#34;http://rdc-keepass-plugin.appspot.com/&#34;&gt;RDCAutoTypeAndTCATO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压放入KeePass的目录中&lt;/li&gt;
&lt;li&gt;在工具[tools] -&amp;gt; RDCAutoTypeAndTCATO -&amp;gt; Programs List&amp;hellip;&lt;/li&gt;
&lt;li&gt;在弹出的两列表中各填入一行&lt;code&gt;QQ.exe&lt;/code&gt;，其它程序类似，只要将主程序的文件名填入内即可&lt;/li&gt;
&lt;li&gt;在QQ的密码保存记录选项中，找到&lt;em&gt;自动输入&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;打开QQ进入等待输入密码的状态&lt;/li&gt;
&lt;li&gt;为指定窗口使用自定义规则，&lt;em&gt;添加&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;在*目标窗口*处选择QQ进程&lt;/li&gt;
&lt;li&gt;使用自定义键击顺序，&lt;code&gt;{Password}{ENTER}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;确定并保存，按下自动输入的快捷键(默认为：Ctrl+Alt+A)&lt;/li&gt;
&lt;li&gt;enjoy~!&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>